36일차

능력단위: 데이터 입출력 구현

시연

피드백

objectAid

doc


제어자(modifier)
제어자란 클래스, 변수 또는 메서드의 선언부에 함께
사용되어 부가적인 의미를 부여한다.
제어자의 종류는 크게 접근 제어자와 그외의 제어자로 
나눌 수 있다.

- 접근 제어자
public, protected, default, private
- 그 외
static, final, abstract, native, transient, synchronized,
volatile, strictfp

제어자는 클래스나 멤버변수와 메서드에 주로 사용되며,
하나의 대상에 대해서 여러 제어자를 조합하여 사용하는 것이 가능
단, 접근 제어자는 한 번에 네 가지 중 하나만 선택해서 
사용할 수 있다.


StaticTest.java

StaticMain.java

출력결과
10
20

20


static - 정적의, 클래스의, 공통적인
인스턴스변수는 하나의 클래스로부터 생성되었더라도
각기 다른 값을 유지하지만, 클래스변수는 인스턴스에 
관계없이 같은 값을 갖는다. 
그 이유는 하나의 변수를 모든 인스턴스가 공유하기 때문이다
인스턴스메서드와 static메서드의 근본적인 차이는
메서드 내에서 인스턴스 멤버를 사용하는가의 여부에 있다

static이 사용될 수 있는 곳 - 멤버변수, 메서드
static을 
멤버변수에 붙이면
- 모든 인스턴스에 공통적으로 사용되는 클래스변수가 된다
- 클래스변수는 인스턴스를 생성하지 않고도 사용가능하다
- 클래스가 메모리에 로드될 때 생성된다.

메서드에 붙이면
- 인스턴스를 생성하지 않고도 호출이 가능한 static 메서드가 된다
- static메서드 내에서는 인스턴스멤버들을 직접 사용할 수 없다.



final - 마지막의, 변경될 수 없는
거의 모든 대상에 사용가능하다
변수에 사용되면 값을 변경할 수 없는 상수가 되며,
메서드에 사용되면 오버라이딩(재정의)을 할 수 없게 되고
클래스에 사용되면 자신을 확장하는 자손클래스를 
정의하지 못하게 된다.

사용가능한 곳 - 클래스, 메서드, 멤버변수, 지역변수

클래스 - final로 지정된 클래스는 다른 클래스의 
조상이 될 수 없다(확장될 수 없는 클래스)
메서드 - 변경될 수 없는 메서드 
즉, 오버라이딩을 통해 재정의 될 수 없다
멤버변수, 지역변수 - 값을 변경할 수 없는 상수가 됨

abstract - 추상의, 미완성의




The final field FinalTest.MAX_SIZE cannot be assigned


public

접근 제어자
private
default
protected
public

멤버 또는 클래스에 사용되어,
해당하는 멤버 또는 클래스를 외부에서 접근하지
못하도록 제한하는 역할을 한다.
접근 제어자가 없으면 기본적으로 default이다
클래스나 멤버변수, 메서드, 생성자에 접근 제어자가
지정되어 있지 않다면 default임을 뜻한다.
단, default를 적으면 오류다
















