21일차

능력단위: SQL 활용


와일드 카드 *

모든 정보를 조회한다

조회 표현식
select 컬럼명, 컬럼명2
from 테이블명;

좌측 정렬: 문자 및 날짜 데이터
우측 정렬: 숫자 데이터

alias 부여      별칭
- 컬럼명 바로 뒤에 온다
- 컬럼명과 alias 사이에 as, As 키워드를 사용할 수도 있다.(option)
- 이중 인용부호는 alias가 공백, 특수문자를 포함할 경우와
대소문자 구분이 필요할 경우 사용된다


선수들의 정보 중
선수 이름, 포지션 위치, 키, 몸무게를 조회하시오


산술 연산자와 합성 연산자

1.선수들의 키에서 몸무게를 뺀 값을 구하시오
이름, 키-몸무게


2. BMI 비만지수
선수들의 키와 몸무게를 이용해서 BMI를 측정하시오
이름, BMI 비만지수
(소수점 3자리에서 반올림하여 둘째자리까지 표현한다)


합성 연산자(||)
concatenation 

- 문자와 문자를 연결하는 경우 2개의 수직 바(||)에 의해 이루어진다
- 컬럼과 문자 또는 다른 컬럼과 연결시킬 수 있다
- 문자 표현식의 결과에 의해 새로운 컬럼을 생성한다


선수들의 출력
출력 형태
선수명 선수, 키 cm, 몸무게 kg

컬럼명     체격정보
내용        박지성 선수, 176 cm, 70 kg



트랜잭션


COUNT(*)  : 전체 데이터 건수


조건절
WHERE문

표현식  []선택사항
SELECT [DISTINCT/ALL] 컬럼명 [ALIAS명]
FROM 테이블명
WHERE 조건식;

WHERE 절은 FROM 절 다름에 위치하며
조건식은 아래 내용으로 구성된다
- 컬럼명
- 비교연산자
- 문자, 숫자, 표현식
- 비교 컬럼명

비교 연산자
=, >, >=
SQL 연산자

논리 연산자
AND, OR, NOT
부정 비교 연산자
!=             : 같지 않다
, ^=          : 같지 않다
, <>          : 같지 않다(ISO 표준, 모든 운영체제에서 사용 가능)
, NOT 컬럼명 =    : ~와 같지 않다
, NOT 컬럼명 >    : ~보다 크지 않다

연산자 우선순위
1   ()
2   NOT 연산자
3   비교 연산자, SQL 비교 연산자
4   AND
5   OR

연산자 우선순위
- 괄호로 묶은 연산이 제일 먼저 처리된다
- 연산자들 중에는 부정 연산자(NOT)가 먼저 처리된다
- 비교 연산자(= , <=, >등), SQL 비교 연산자가 처리되고
- 논리 연산자 중에서는 AND, OR의 순으로 처리된다
* 우선순위가 다르면 원하는 자료를 찾지 못하거나 틀린
자료를 모른채 사용할 수 있다. 가능한 ()를 사용하여
우선순위를 표시하는 것이 좋다


사원 테이블에서
부서가 10번인 사원들만 조회하시오
전체 정보를 보여준다


급여가 1500이하인 사원의 사원 번호,
사원명, 급여를 출력하는 SQL문을 작성하시오
6명이 출력된다
EMPNO	ENAME	SAL

키가 170센티미터 이상인 선수의 정보를 조회하시오
선수이름, 포지션, 백넘버, 키

"FORD": invalid identifier

이름이 SMITH인 사원의
사원번호, 사원명, 급여를 출력하시오
EMPNO	ENAME	SAL
	SMITH	

선수들 중에 팀 아이디가 K02인 
선수만 조회하시오
선수이름	포지션	백넘버	키

총 49개 나옴

포지션이 미드필더(MF)인 선수들만 조회하시오
PLAYER_NAME	POSITION		BACK_NO		HEIGHT

총 162개 나옴


SQL 연산자
- BETWEEN a AND b : a와 b의 값 사이에 있으면 포함됨
- IN(list) : 리스트에 있는 값 중에서 어느 하나라도 일치하면 된다
- LIKE '비교문자열' : 비교 문자열과 형태가 일치하면 된다
- IS NULL : null 값인 경우

7521이거나 7654이거나 7844인
사원들을 검색하는 쿼리문을 IN연산자를
사용하여 구하시오
EMPNO	SAL
3명
사원번호가 7521도 아니고 7654도 아니고
7902도 아닌 사원들을 검색하는 쿼리문을 작성하시오
EMPNO	ENAME
9명

소속팀이 K02이거나 또는 K07인 
선수들의 정보를 조회하시오
선수이름	포지션	백넘버	키
100명


LIKE '문자열'
와일드 카드            의미
%	문자가 없거나, 하나 이상의 문자에 어떤
	값이 와도 상관없이 찾는다(0개 이상의 어떤 문자)
_	하나의 문자에 어떤 값이 와도 상관없다(1개인 단일 문자를 의미)

SELECT *
FROM EMP
WHERE ENAME LIKE 'M%';
MFJ2IOFJ23IO3JIFO
M

'%M%'     M이 중간에 포함된 문자열을 전부 찾는다
M
M23KLRJ32LF32JF3KL
MMMMMMMMMM
123M
1MFF234F23F32

'%M'

1.사원 중에서 이름이 K로 시작하는 사원의 
사원번호와 이름을 출력하시오
사원번호	사원명
1명
2.이름 중에 K를 포함하는 사원의 
사원번호와 이름을 출력하시오
사원번호	사원명
3명
3. 이름이 K로 끝나는 사원의 
사원번호와 이름을 출력하시오
사원번호	사원명
1명
4. 이름의 두 번째 글자가 A인 사원을
찾으시오
모든 정보 표시
3명

급여가 2000 부터 3000사이의 사원을 검색하시오


1.사원 중에 1980년도에 입사한 사원을 출력하시오
모든 정보를 표시하시오
1명

2.키가 170이상 180센티 이하인 선수들의 정보를 
구하시오
선수이름	포지션    국적     별명       키
259명


형식
대상컬럼 IS [연산자] NULL [비교값];

IS NULL연산자
- NULL 값과의 수치연산은 NULL 값을 리턴한다
- NULL 값과의 비교연산은 거짓(FALSE)을 리턴한다
- 어떤 값과 비교할 수도 없으며, 특정 값보다 크다,
적다라고 표현할 수 없다


1.포지션이 NULL인 선수들을 조회하시오
선수ID	선수영어이름	포지션	팀ID
3

2.상관이 없는 사원을 검색하시오
전체 정보 표시
1


논리연산자
AND	앞에 있는 조건과 뒤에 오는 조건이 참(TRUE)이 되면
결과도 참이 된다. 즉, 앞의 조건과 뒤의 조건을 동시에 만족해야
하는 것이다.
OR	앞의 조건이 참(TRUE) 이거나 뒤의 조건이 참(TRUE)이 되면
결과도 참(TRUE)이 된다. 즉, 앞뒤의 조건 중 하나만 참(TRUE)이면 된다.
NOT	뒤에 오는 조건에 반대되는 결과를 되돌려 준다.


소속팀이 삼성블루윙즈이거나 전남드래곤즈에 소속된 선수들이어야 하고
포지션이 미드필더(MF)이어야 한다
키는 170cm 이상이고 180이하여야 한다.
33
삼성블루윙즈 MF 170~180
전남드래곤즈 MF 170~180


정리
동일한 조건에 대해서 AND 연산을 하면
조건에 모두 만족해야 하므로 로우의 개수가 줄어든다
반면, OR연산을 사용하면 조건에 맞는 로우의 개수가
늘어나게 된다.

NOT 연산자
부서번호가 10번인 사원을 조회하시오

2000에서 3000 사이의 급여에 
포함되지 않는 사원을 조회하시오
전체 컬럼 표시
8

삼성블루윙즈 소속인 선수들 중에서 
포지션이 미드필더가 아니고, 
키가 175 이상 185 이하가 아닌 
선수들의 자료를 조회하시오
8개

국적 컬럼이 NULL이 아닌 선수와
국적을 표시하시오
선수이름	국적

27명
