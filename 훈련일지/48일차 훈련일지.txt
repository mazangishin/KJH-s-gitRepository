48일차

능력단위: 애플리케이션 구현



컬렉션 프레임웍(Collection Framework)

CollectionStudy


배열(Array)의 특징: 
배열은 가장 기본적인 형태의 자료구조로 구조가 간단하며
사용하기 쉽고 데이터를 읽어 오는데 걸리는 시간(접근시간, access time)이 가장 빠르다는 장점을 가지고 있다.

단점은 
1.크기를 변경할 수 없다.
- 크기를 변경할 수 없으므로 새로운 배열을 생성해서 데이터를 복사하는 작업이 필요하다.
- 실행속도를 향상시키기 위해서는 충분히 큰 크기의 배열을 생성해야 하므로 메모리가 낭비된다.

2. 비순차적인 데이터의 추가 또는 삭제에 시간이 많이 걸린다
- 차례대로 데이터를 추가하고 마지막에서부터 데이터를 삭제하는 것은 빠르지만, 
- 배열의 중간에 데이터를 추가하려면, 빈자리를 만들기 위해 다른 데이터들을 복사해서 이동해야 한다.


ArrayList의 특징
배열을 이용한 자료구조는 데이터를 읽어오고 저장하는 데는 
효율이 좋지만, 용량을 변경해야할 때는 새로운 배열을 생성한 후 
기존의 배열로부터 새로 생성된 배열로 데이터를 복사해야하기 때문에
상당히 효율이 떨어진다는 단점을 가지고 있다.


The method add(int, String) in the type ArrayList<String> is not applicable for the arguments (int)

지네릭스
제너릭스(Generics)
다양한 타입의 객체들을 다루는 메서드나 컬렉션 클래스에
컴파일 시의 타입 체크를 해주는 기능이다.
객체의 타입을 컴파일 시에 체크하기 때문에 객체의 타입
안정성을 높이고 형변환의 번거로움을 줄여준다.

타입 안정성을 높인다는 것은 의도하지 않은 타입의 객체가
저장되는 것을 막고,
저장된 객체를 꺼내올 때 원래의 타입과 다른 타입으로 
잘못 형변환되어 발생할 수 있는 오류를 줄여준다는 의미이다.

제너릭스의 장점 요약
1. 타입 안정성을 제공한다.
2. 타입체크와 형변환을 생략할 수 있으므로 코드가 간결해 진다



ArrayList에 
2
4
6
8
10
...

18


Iterator
컬렉션에 저장된 요소들을 읽어오는 방법을
표준화하였다.


Iterator 언제 쓴다?
출력할때

for
변경

MapStudy


키값은 동기의 별명
밸류는 동기의 이름

3사람 정도 넣어준다

사용자 입력을 통해서 별명을 입력하면 
별명에 해당하는 동기의 이름이 출력되게 하시오


맵 이용한다

팀원 정보를 입력한다

원하는 팀원의 정보를 출력한다

























































