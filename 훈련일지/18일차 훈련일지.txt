17일차

능력단위: 데이터베이스 구현

기존 컬럼 속성 변경하기

[형식]
ALTER TABLE 테이블명
MODIFY (컬럼명 데이터 타입, ...);

기존 JOB 9
이후 JOB 30
그 다음 JOB 5
cannot decrease column length because some value is too big
값 데이터?

정리
1. 해당 컬럼에 자료가 있는 경우
@ 크기를 늘릴 수는 있지만 
현재 가지고 있는 데이터의 크기보다 
작은 크기로 변경할 수 없다.
@ 컬럼의 데이터 타입을 변경할 수 없다

2. 해당 컬럼에 자료가 없는 경우
@ 컬럼의 크기를 변경할 수 있다(마음대로)
@ 컬럼의 데이터 타입을 변경할 수 있다

단, 해당 컬럼이 NULL 값만 가지고 있으면 데이터 유형을 
변경할 수 있다.


column to be modified must be empty to change datatype

'백만원'
'10000000원'
'100000'


DEPT03 테이블을 생성해서 적용하시오

부서번호의 숫자길이를 4자리로 변경하시오

부서위치의 문자열 길이를 20으로 변경하시오

컬럼명

테이블명 변경하기
[형식]
RENAME 변경 전 테이블명 TO 변경 후 테이블명

테이블에 새로운 행을 추가하는 INSERT INTO 문
[형식]
1. INSERT INTO 테이블명 (넣고자 하는 컬럼명들)
VALUES (넣고자 하는 컬럼명들에 넣을 데이터 리스트);


2. INSERT INTO 테이블명
VALUES (전체 컬럼에 넣을 데이터 리스트);

부가설명
해당 컬럼명과 입력되어야 하는 값을 서로 1:1로 매핑해서 입력한다

not enough values



@부서 테이블을 복제한 dept01테이블에서 
새로운 내용을 추가하시오

@부서번호가 50이고 부서명은 education이며
위치는 ganknam
을 추가한다

@부서번호가 60이고 위치가 seoul 인 데이터를 추가하시오

SAM01 TABLE
EMPNO	ENAME	JOB	SAL
1000	APPLE	POLICE	10000
1010	BANANA	NURSE	15000
1020	ORANGE	DOCTOR	25000
1030	VAT	NULL	2000


테이블의 내용을 수정하는 UPDATE문

형식
UPDATE 테이블명
SET 변경하고 하는 데이터가 있는 컬럼명 = VALUE1,
COLUMN2 = VALUE2
WHERE 조건문;

전체 행의 내용을 변경한다
UPDATE 테이블명
SET 변경하고 하는 데이터가 있는 컬럼명 = VALUE1,
COLUMN2 = VALUE2;

테이블의 특정 행만 변경
WHERE 컬럼명 = 값 

WHERE 문  -> 조건문

테이블의 불필요한 행을 삭제하는 
DELETE 문

형식
DELETE FROM 삭제를 원하는 정보가 들어있는 테이블명
WHERE 조건절;


COMMIT 명령어 ROLLBACK 명령어
@데이터 무결성이 보장된다.
@영구적인 변경 전에 데이터의 변경사항을 확인할 수 있다
@논리적으로 연관된 작업을 그룹화할 수 있다

트랜잭션은
ALL OR NOTHING

DML(SELECT, INSERT, DELETE, UPDATE)   
VS
DDL(CREATE, ALTER, DROP, RENAME)

@DML에 관련된 작업은 어딘가 임시 저장소에
보관된다
그 내용은 확인이 가능하다
@임시저장소에 있는 내용은 ROLLBACK 가능하다

@임시저장소가 아닌 실제 저장소에 보관된 데이터는 
ROLLBACK 불가능하다

@DDL은 내용을 수행 후 마지막에 COMMIT;를 수행한다


C:\oraclexe\app\oracle

C:\oraclexe\app\oracle\product\11.2.0\server

listener.ora

tnsnames.ora

client  요청          니 서버에 붙어도 되겠니?

listener.ora 등록         서버 컴퓨터에서 설정

오라클 11g 원격접속하기


127.0.0.1
데드 락
락   잠금
lock


데이터 무결성을 위한 제약 조건
데이터 무결성 제약조건(Data Integrity Constraint Rule)이란 
테이블에 부적절한 자료가 입력되는 것을 
방지하기 위해서 테이블을 생성할 때 각 컬럼에 대해서
정의하는 여러 가지 규칙

무결성: 데이터베이스에 저장된 값과 그것이 표현하는 
현실세계의 실제 값이 일치하는 정확성을 이야기한다.


부서명과 지역명 저장하다 보면
동일한 이름이 저장될 수도 있다.
동일한 데이터가 저장되어 있더라도
이를 구분할 수 있게 하는 특별한 컬럼이 필요하다
부서 번호라는 컬럼을 추가하여 유일한 값을 갖게 
하면 무결한 데이터를 만들 수 있게 된다.


무결한 데이터의 5가지 제약 조건
무결성 제약조건 		역할
NOT NULL		NULL을 허용하지 않는다
UNIQUE			중복된 값을 허용하지 않는다. 항상 유일한 값을 갖도록 한다
                                       (각 행 구분)
PRIMARY KEY(기본키)	NULL을 허용하지 않고 중복된 값을 허용하지 않는다
			NOT NULL 조건과 UNIQUE 조건을 결합한 형태
FOREIGN KEY(외래키)	참조되는 테이블의 컬럼의 값이 존재하면 허용한다
CHECK			저장 가능한 데이터값의 범위나 조건을 지정하여 
			설정한 값만을 허용한다


cannot insert NULL into ("TOTO"."EMP02"."EMPNO")


제품 테이블이 있다
컬럼명   
제품번호   NUMBER(2)  널을 허용하지 않는다
제품이름   VARCHAR2(100) 널을 허용하지 않는다
제품회사	  VARCHAR2(100) 널을 허용한다

제품 테이블을 만드시오
3개의 데이터를 입력한다
1개의 데이터는 10     핸드프로    합격하자

유일한 값만 허용하는 유니크 제약조건

특정 컬럼에 자료가 중복되지 않게 하는 것
즉, 지정된 컬럼에 유일한 값이 입력될 수 있도록 하는 것


unique constraint (TOTO.SYS_C007008) violated


제품



DEPT04 테이블을 만드시오 
부서번호는 유일한 값만을 가질 수 있다
부서이름은 동일한 값을 가질 수 있다
위치는 유일한 값만을 가질 수 있다.

데이터 3개 넣어서 확인하시오


데이터 구분을 위한 
PRIMARY KEY 제약 조건

이름이 같은 사람은 존재해도 주민번호가 같은 사람은 없다.
그래서 주민번호는 사람을 구분하기 위해 사용할 수 있다.
테이블에 저장된 데이터를 구분하기 위해서는
특정 컬럼에 PRIMARY KEY 제약조건을 주면 좋다.

우리 제품은 빔 프로젝트를 만드는 회사인데
제품의 이름은 EPSON이고요 
가격은 타 회사에 비해 아주 쌉니다
10000원 정도 합니다
이걸 이번에 저희들이 전자 시스템으로 변경하고 싶은데
가능할까요?

EPSON SERIES1        10000
EPSON SERIES2  	  100000
EPSON SERIES1        20000  

하나의 제품명을 찾을 수 있도록 테이블을 구성하시오

SELECT *
FROM  제품테이블
WHERE ??? 컬럼명 = ???;

EPSON SERIES1        10000


참조 무결성을 위한 FOREIGN KEY 제약 조건
참조 무결성이란?
테이블 사이의 관계에서 발생하는 개념






























































































































































































